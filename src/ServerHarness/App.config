<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <!-- The first entry must be configSections. -->
  <configSections>
  </configSections>

  <!-- The values in appSettings large systemic choices to be made once by an administrator. Changing these
       after a game has been live will likely require careful planning, E.G. data migration strategies.
       The ProviderName settings should match the "Name" or "DatabaseName" of the imported WheelMUD.Data.(System) -->
  <appSettings>
    <add key="DocumentDataProviderName" value="RavenDB" />

    <!-- If UserAccountIsPlayerCharacter is true, then the initial user login will be the same as the player name.
         Else, the user logs in and then selects (or creates) a character they want to use during this session. -->
    <add key="UserAccountIsPlayerCharacter" value="true" />

    <!-- If PlayerCharacterNamesMustUseSingleCapital is true, then all player character names will be forced into
         the format like "Dude" even if the user typed something like "DuDe". -->
    <add key="PlayerCharacterNamesMustUseSingleCapital" value="true" />

    <!-- If AutomaticLoginCommand has a value, this will be issued as a command on behalf of each logged-in player.
         For example, you could change this from "look" to "glance" to give the player a more brief reminder of the
         context they left off at when last they played, or "" to require the player to ask for such context. -->
    <add key="AutomaticLoginCommand" value="look" />

    <!-- The DefaultRoomID is the default location for new players to spawn into the world, or to place players who
         could not be restored to their saved location (e.g. because the world changed and it no longer exists). -->
    <add key="DefaultRoomID" value="rooms/void" />

    <!-- The name of the game. Can be used in splash screen templates, establishing the ProgramData sub-folder to
         save persistence data to, and so on. Try not to change this a lot. -->
    <add key="GameName" value="WheelMUD" />

    <!-- The port to receive incoming telnet connections on. -->
    <add key="TelnetPort" value="4000" />
    
    <!-- The website for this game. Potentially rendered in splash screens, etc. -->
    <add key="Website" value="https://github.com/DavidRieman/WheelMUD" />

    <!-- The optional FTP port. WARNING: This system is NOT currently secured to only allow appropriately-privileged
         accounts access. You probably don't want to open this port unless you know what you are doing and understand
         and accept the risks of having additional attack surface. As long as FtpPort remains blank, the optional FTP
         system will not open any extra ports. -->
    <add key="FtpPort" value="" />

	<!-- Controls whether the RavenDB web interface loads automatically or not. -->
	<add key="AutoOpenDbConsole" value="true" />
  </appSettings>

  <!-- Connection strings should exist for all support data provider systems, to allow the administrator to
       quickly get up and running with their desired backing database or storage provider.
       Only the data systems currently referenced in the appSettings above will get used at runtime.
       If you wish to host a data provider on a separate system, you will need to update connectionStrings to
       get the game server to find and talk to that data provider. -->
  <connectionStrings>
    <add name="RavenDB" providerName="RavenDB" connectionString="embedded" />
  </connectionStrings>

  <!-- Configuration below this point should be specific to application development or deployment technology.
       An administrator should not have to modify things below here unless building related technology, or 
       applying some specific fix to these technologies. -->
  <runtime>
  </runtime>
</configuration>
