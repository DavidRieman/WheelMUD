<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <!-- The first entry must be configSections. -->
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>

  <!-- The values in appSettings large systemic choices to be made once by an administrator. Changing these
       after a game has been live will likely require careful planning, E.G. data migration strategies.
       The ProviderName settings should match the "Name" or "DatabaseName" of the imported WheelMUD.Data.(System) -->
  <appSettings>
    <add key="RelationalDataProviderName" value="SQLite" />
    <add key="DocumentDataProviderName" value="RavenDB" />

    <!-- If UserAccountIsPlayerCharacter is true, then the initial user login will be the same as the player name.
         Else, the user logs in and then selects (or creates) a character they want to use during this session. -->
    <add key="UserAccountIsPlayerCharacter" value="true" />

    <!-- If PlayerCharacterNamesMustUseSingleCapital is true, then all player character names will be forced into
         the format like "Dude" even if the user typed something like "DuDe". -->
    <add key="PlayerCharacterNamesMustUseSingleCapital" value="true" />
  </appSettings>

  <!-- Connection strings should exist for all support data provider systems, to allow the administrator to
       quickly get up and running with their desired backing database or storage provider.
       Only the data systems currently referenced in the appSettings above will get used at runtime.
       If you wish to host a data provider on a separate system, you will need to update connectionStrings to
       get the game server to find and talk to that data provider. -->
  <connectionStrings>
    <add name="SQLite" providerName="System.Data.SQLite" connectionString="Data Source = {DataDir}WheelMud.net.db; Version = 3;" />
    <add name="RavenDB" providerName="RavenDB" connectionString="embedded" />
  </connectionStrings>

  <!-- Configuration below this point should be specific to application development or deployment technology.
       An administrator should not have to modify things below here unless building related technology, or 
       applying some specific fix to these technologies. -->
  <log4net>
    <appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
      <bufferSize value="100" />
      <connectionType value="Finisar.SQLite.SQLiteConnection, SQLite.NET, Version=0.21.1869.3794, Culture=neutral, PublicKeyToken=c273bd375e695f9c" />
      <connectionString value="Data Source=c:\\inetpub\\wwwroot\\logs\\log4net.db;Version=3;" />
      <commandText value="INSERT INTO Log (Date, Level, Logger, Message) VALUES (@Date, @Level, @Logger, @Message)" />
      <parameter>
        <parameterName value="@Date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <parameter>
        <parameterName value="@Level" />
        <dbType value="String" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Logger" />
        <dbType value="String" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Message" />
        <dbType value="String" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
    </appender>
    <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender">
      <applicationName value="WheelMUD" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="logfile.txt" />
      <appendToFile value="false" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="-1" />
      <maximumFileSize value="5MB" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <root>
      <level value="INFO" />
      <appender-ref ref="RollingLogFileAppender" />
    </root>
  </log4net>
  <runtime>
    <legacyUnhandledExceptionPolicy enabled="1" />
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <!-- 
        Apparently System.Data.SQLite maintainers delete old versions when they update for NuGet.
        Thus ServiceStack is unable to properly resolve its dependency on 1.0.84.0. This workaround
        seems to work, but seems like it could be dangerous if System.Data.SQLite has any
        breaking changes.
        
        For reference: http://stackoverflow.com/questions/13464900/cannot-get-servicestack-ormlite-sqlite64-example-working
      -->
      <dependentAssembly>
        <assemblyIdentity name="System.Data.SQLite" publicKeyToken="db937bc2d44ff139" culture="neutral" />
        <bindingRedirect oldVersion="1.0.84.0" newVersion="1.0.86.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <startup useLegacyV2RuntimeActivationPolicy="true">
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
  </startup>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>
